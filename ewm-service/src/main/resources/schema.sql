ALTER TABLE IF EXISTS events
    DROP CONSTRAINT IF EXISTS fk_events_categories;
ALTER TABLE IF EXISTS events
    DROP CONSTRAINT IF EXISTS fk_events_users;
ALTER TABLE IF EXISTS events
    DROP CONSTRAINT IF EXISTS fk_events_locations;
ALTER TABLE IF EXISTS requests
    DROP CONSTRAINT IF EXISTS fk_requests_users;
ALTER TABLE IF EXISTS requests
    DROP CONSTRAINT IF EXISTS fk_requests_events;
ALTER TABLE IF EXISTS event_compilations
    DROP CONSTRAINT IF EXISTS fk_event_compilations_events;
ALTER TABLE IF EXISTS event_compilations
    DROP CONSTRAINT IF EXISTS fk_event_compilations_compilations;


DROP TABLE IF EXISTS categories;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS locations;
DROP TABLE IF EXISTS compilations;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS event_compilations;


CREATE TABLE IF NOT EXISTS categories
(
    cat_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name   VARCHAR(255) UNIQUE                                 NOT NULL
);

CREATE TABLE IF NOT EXISTS users
(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name    VARCHAR(255)                                        NOT NULL,
    email   VARCHAR(512) UNIQUE                                 NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    event_id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    cat_id             BIGINT                                              NOT NULL,
    annotation         VARCHAR(2000)                                       NOT NULL,
    created_on         TIMESTAMP WITHOUT TIME ZONE                         NOT NULL,
    description        VARCHAR(7000)                                       NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE                         NOT NULL,
    initiator_id       BIGINT                                              NOT NULL,
    location_id        BIGINT,
    paid               BOOLEAN                                             NOT NULL,
    participant_limit  INTEGER,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN                                             NOT NULL,
    state              VARCHAR(120)                                        NOT NULL,
    title              VARCHAR(120)                                        NOT NULL,
    views              BIGINT
);

CREATE TABLE IF NOT EXISTS locations
(
    location_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    lat         FLOAT                                               NOT NULL,
    lon         FLOAT                                               NOT NULL,
    UNIQUE (lat, lon)
);

CREATE TABLE IF NOT EXISTS compilations
(
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    pinned         BOOLEAN                                             NOT NULL,
    title          VARCHAR(50) UNIQUE                                  NOT NULL
);

CREATE TABLE IF NOT EXISTS event_compilations
(
    event_compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    compilation_id       BIGINT                                              NOT NULL,
    event_id             BIGINT                                              NOT NULL
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    event_id     BIGINT                                              NOT NULL,
    requester_id BIGINT                                              NOT NULL,
    created      TIMESTAMP WITHOUT TIME ZONE                         NOT NULL,
    status       VARCHAR                                             NOT NULL
);



ALTER TABLE IF EXISTS events
    ADD CONSTRAINT fk_events_categories FOREIGN KEY (cat_id) REFERENCES categories (cat_id);


ALTER TABLE IF EXISTS events
    ADD CONSTRAINT fk_events_users FOREIGN KEY (initiator_id) REFERENCES users (user_id);


ALTER TABLE IF EXISTS events
    ADD CONSTRAINT fk_events_locations FOREIGN KEY (location_id) REFERENCES locations (location_id);


ALTER TABLE IF EXISTS requests
    ADD CONSTRAINT fk_requests_users FOREIGN KEY (requester_id) REFERENCES users (user_id);


ALTER TABLE IF EXISTS requests
    ADD CONSTRAINT fk_requests_events FOREIGN KEY (event_id) REFERENCES events (event_id);



ALTER TABLE IF EXISTS event_compilations
    ADD CONSTRAINT fk_event_compilations_events FOREIGN KEY (event_id) REFERENCES events (event_id);



ALTER TABLE IF EXISTS event_compilations
    ADD CONSTRAINT fk_event_compilations_compilations
        FOREIGN KEY (compilation_id) REFERENCES compilations (compilation_id);
